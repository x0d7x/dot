# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

after-startup-command = [
    # (format: 0xAARRGGBB)
    # 'exec-and-forget borders active_color=0xff742592 inactive_color=0xff494d64 width=0.5 style=round blur_radis=8.0',
    'exec-and-forget sketchybar',

]
# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'horizontal'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
    "move-mouse window-lazy-center",
    'exec-and-forget ~/dot/.config/scripts/sticky.sh',
]
# NOTE: to make simple barr refresh when workspace changes
exec-on-workspace-change = [
    '/bin/bash',
    '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]
# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical = 12
outer.left = 14
outer.bottom = 17
outer.top = 35
outer.right = 14

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'
# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'
# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-d = 'workspace D'
alt-q = 'workspace Q'
alt-s = 'workspace S'
alt-m = 'workspace M'
alt-t = 'workspace T'
alt-b = 'workspace B'
alt-r = 'macos-native-fullscreen'
alt-f = 'fullscreen'
alt-n = 'workspace N'
alt-w = 'exec-and-forget /Users/dox/dot/.config/scripts/sticky.sh'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-b = 'move-node-to-workspace B'
alt-shift-d = 'move-node-to-workspace D'
alt-shift-q = 'move-node-to-workspace Q'
alt-shift-m = 'move-node-to-workspace M'
alt-shift-s = 'move-node-to-workspace S'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-w = 'exec-and-forget ~/dot/.config/scripts/chbg.sh'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
r = [
    'reload-config',
    'mode main',
] # reset layout
  esc = [
  'mode main',
]
  m = [
  'flatten-workspace-tree',
  'mode main',
]
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
    'layout floating tiling', # Toggle between floating and tiling layout
    'mode main',
] 
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']
[[on-window-detected]]
if.app-id = 'com.brave.Browser'
if.window-title-regex-substring = 'Picture in Picture'
check-further-callbacks = true
run = 'layout floating'
[[on-window-detected]]
if.app-id = "com.mitchellh.ghostty"
run = "move-node-to-workspace T"
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"
[[on-window-detected]]
if.app-id = 'org.qutebrowser.qutebrowser'
run = "move-node-to-workspace B"
[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
if.window-title-regex-substring = 'Picture-in-Picture'
check-further-callbacks = true
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = 'move-node-to-workspace T'
[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'move-node-to-workspace B'
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = "move-node-to-workspace B"
[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = "move-node-to-workspace B"
[[on-window-detected]]
if.app-id = 'com.smartcodeltd.stremio'
run = "move-node-to-workspace M"
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"
[[on-window-detected]]
if.app-id = 'cc.ffitch.shottr'
run = "move-node-to-workspace S"
[[on-window-detected]]
if.app-id = 'so.cap.desktop'
run = "move-node-to-workspace S"
[[on-window-detected]]
if.app-id = 'maccatalyst.com.frontrow.vlog'
run = "move-node-to-workspace S"
[[on-window-detected]]
if.app-id = 'com.wulkano.kap'
run = "move-node-to-workspace S"
[[on-window-detected]]
if.app-id = "net.freemacsoft.AppCleaner"
run = "layout floating"
[[on-window-detected]]
if.app-id = 'app.legcord.Legcord'
run = "move-node-to-workspace D"
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.Passwords'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.obsproject.obs-studio'
run = 'move-node-to-workspace S'
